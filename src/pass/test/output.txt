@array = dso_local global [110 x i32] zeroinitializer
@n = dso_local global i32 0

declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)

define dso_local i32 @findfa(i32 %0){
entry:     
  %1 = alloca i32     ; i32 a
  %ret = alloca i32     
  store i32 %0, i32* %1     
  %2 = load i32, i32* %1     
  %3= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %2     
  %4 = load i32, i32* %3     
  %5 = load i32, i32* %1     
  %6= icmp eq i32 %4, %5     ; array[a]==a
  br i1 %6, label %7, label %9     ; judge array[a]==a

7:     ; if Body
  %8 = load i32, i32* %1     
  store i32 %8, i32* %ret     
  br label %retBB     

9:     ; else Body
  %10 = load i32, i32* %1     
  %11= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %10     
  %12 = load i32, i32* %1     
  %13= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %12     
  %14 = load i32, i32* %13     
  %15 = call i32 @findfa(i32 %14)     ; call findfa(array[a])
  store i32 %15, i32* %11     ; array[a]=findfa(array[a])
  %16 = load i32, i32* %1     
  %17= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %16     
  %18 = load i32, i32* %17     
  store i32 %18, i32* %ret     
  br label %retBB     

retBB:     
  %19 = load i32, i32* %ret     
  ret i32 %19     
}

define dso_local i32 @main(){
entry:     
  %0 = alloca i32     ; ; i32 n=findfa(b)
  %1 = alloca i32     ; ; i32 m=findfa(a)
  %2 = alloca i32     ; ; i32 b
  %3 = alloca i32     ; ; i32 a
  %4 = alloca i32     ; ; i32 n=findfa(b)
  %5 = alloca i32     ; ; i32 m=findfa(a)
  %6 = alloca i32     ; ; i32 b
  %7 = alloca i32     ; ; i32 a
  %8 = alloca i32     ; ; i32 n=findfa(b)
  %9 = alloca i32     ; ; i32 m=findfa(a)
  %10 = alloca i32     ; ; i32 b
  %11 = alloca i32     ; ; i32 a
  %12 = alloca i32     ; ; i32 n=findfa(b)
  %13 = alloca i32     ; ; i32 m=findfa(a)
  %14 = alloca i32     ; ; i32 b
  %15 = alloca i32     ; ; i32 a
  %16 = alloca i32     ; ; i32 n=findfa(b)
  %17 = alloca i32     ; ; i32 m=findfa(a)
  %18 = alloca i32     ; ; i32 b
  %19 = alloca i32     ; ; i32 a
  %20 = alloca i32     ; ; i32 n=findfa(b)
  %21 = alloca i32     ; ; i32 m=findfa(a)
  %22 = alloca i32     ; ; i32 b
  %23 = alloca i32     ; ; i32 a
  %24 = alloca i32     ; ; i32 i=1
  %25 = alloca i32     ; ; i32 n
  %26 = alloca i32     ; i32 tmp=i+1
  %27 = alloca i32     ; i32 loc=n*(a-1)+b
  %28 = alloca i32     ; i32 k=n*n+1
  %29 = alloca i32     ; i32 flag=0
  %30 = alloca i32     ; i32 i=0
  %31 = alloca i32     ; i32 b
  %32 = alloca i32     ; i32 a
  %33 = alloca i32     ; i32 m
  %34 = alloca i32     ; i32 t
  %ret = alloca i32     
  store i32 1, i32* %34     ; t=1
  br label %35     

35:     ; judge t
  %36 = load i32, i32* %34     
  %37= icmp ne i32 %36, 0     
  br i1 %37, label %38, label %242     

38:     ; while Body
  %39 = load i32, i32* %34     
  %40 = sub i32 %39, 1     ; t-1
  store i32 %40, i32* %34     ; t=t-1
  store i32 4, i32* @n     ; n=4
  store i32 10, i32* %33     ; m=10
  store i32 0, i32* %30     ; i=i32 0
  store i32 0, i32* %29     ; flag=i32 0
  %41 = load i32, i32* @n     
  store i32 %41, i32* %25     
  store i32 1, i32* %24     ; ; i=i32 1
  br label %42     

42:     ; init ; judge i<=n*n+1
  %43 = load i32, i32* %24     
  %44 = load i32, i32* %25     
  %45 = load i32, i32* %25     
  %46 = mul i32 %44, %45     ; ; n*n
  %47 = add i32 %46, 1     ; ; n*n+1
  %48= icmp sle i32 %43, %47     ; ; i<=n*n+1
  br i1 %48, label %49, label %54     

49:     ; init ; while Body
  %50 = load i32, i32* %24     
  %51= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %50     
  store i32 -1, i32* %51     ; ; array[i]=-1
  %52 = load i32, i32* %24     
  %53 = add i32 %52, 1     ; ; i+1
  store i32 %53, i32* %24     ; ; i=i+1
  br label %42     

54:     ; leave inline call void @init(i32 %15)
  %55 = load i32, i32* @n     
  %56 = load i32, i32* @n     
  %57 = mul i32 %55, %56     ; n*n
  %58 = add i32 %57, 1     ; n*n+1
  store i32 %58, i32* %28     ; k= = add i32 , 1
  br label %59     

59:     ; judge i<m
  %60 = load i32, i32* %30     
  %61 = load i32, i32* %33     
  %62= icmp slt i32 %60, %61     ; i<m
  br i1 %62, label %63, label %238     

63:     ; while Body
  %64 = call i32 @getint()     ; call getint()
  store i32 %64, i32* %32     ; a=getint()
  %65 = call i32 @getint()     ; call getint()
  store i32 %65, i32* %31     ; b=getint()
  %66 = load i32, i32* %29     ; !flag
  %67= icmp eq i32 %66, 0     
  br i1 %67, label %68, label %235     ; judge !flag

68:     ; if Body
  %69 = load i32, i32* @n     
  %70 = load i32, i32* %32     
  %71 = sub i32 %70, 1     ; a-1
  %72 = mul i32 %69, %71     ; n*(a-1)
  %73 = load i32, i32* %31     
  %74 = add i32 %72, %73     ; n*(a-1)+b
  store i32 %74, i32* %27     ; loc= = add i32 , 
  %75 = load i32, i32* %27     
  %76= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %75     
  %77 = load i32, i32* %27     
  store i32 %77, i32* %76     ; array[loc]=loc
  %78 = load i32, i32* %32     
  %79= icmp eq i32 %78, 1     ; a==1
  br i1 %79, label %80, label %94     ; judge a==1

80:     ; if Body
  %81= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 0     
  store i32 0, i32* %81     ; array[0]=0
  %82 = load i32, i32* %27     
  store i32 %82, i32* %23     
  store i32 0, i32* %22     
  %83 = load i32, i32* %23     
  %84 = call i32 @findfa(i32 %83)     ; ; call findfa(a)
  store i32 %84, i32* %21     ; ; m= = call i32 @findfa(i32 )
  %85 = load i32, i32* %22     
  %86 = call i32 @findfa(i32 %85)     ; ; call findfa(b)
  store i32 %86, i32* %20     ; ; n= = call i32 @findfa(i32 )
  %87 = load i32, i32* %21     
  %88 = load i32, i32* %20     
  %89= icmp ne i32 %87, %88     ; ; m!=n
  br i1 %89, label %90, label %94     ; ; judge m!=n

90:     ; mmerge ; if Body
  %91 = load i32, i32* %21     
  %92= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %91     
  %93 = load i32, i32* %20     
  store i32 %93, i32* %92     ; ; array[m]=n
  br label %94     

94:     
  %95 = load i32, i32* %32     
  %96 = load i32, i32* @n     
  %97= icmp eq i32 %95, %96     ; a==n
  br i1 %97, label %98, label %115     ; judge a==n

98:     ; if Body
  %99 = load i32, i32* %28     
  %100= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %99     
  %101 = load i32, i32* %28     
  store i32 %101, i32* %100     ; array[k]=k
  %102 = load i32, i32* %27     
  %103 = load i32, i32* %28     
  store i32 %102, i32* %19     
  store i32 %103, i32* %18     
  %104 = load i32, i32* %19     
  %105 = call i32 @findfa(i32 %104)     ; ; call findfa(a)
  store i32 %105, i32* %17     ; ; m= = call i32 @findfa(i32 )
  %106 = load i32, i32* %18     
  %107 = call i32 @findfa(i32 %106)     ; ; call findfa(b)
  store i32 %107, i32* %16     ; ; n= = call i32 @findfa(i32 )
  %108 = load i32, i32* %17     
  %109 = load i32, i32* %16     
  %110= icmp ne i32 %108, %109     ; ; m!=n
  br i1 %110, label %111, label %115     ; ; judge m!=n

111:     ; mmerge ; if Body
  %112 = load i32, i32* %17     
  %113= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %112     
  %114 = load i32, i32* %16     
  store i32 %114, i32* %113     ; ; array[m]=n
  br label %115     

115:     
  %116 = load i32, i32* %31     
  %117 = load i32, i32* @n     
  %118= icmp slt i32 %116, %117     ; b<n
  br i1 %118, label %119, label %140     

119:     
  %120 = load i32, i32* %27     
  %121 = add i32 %120, 1     ; loc+1
  %122= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %121     
  %123 = load i32, i32* %122     
  %124= icmp ne i32 %123, -1     ; b<n && array[loc+1]!=-1
  br i1 %124, label %125, label %140     ; judge b<n&&array[loc+1]!=-1

125:     ; if Body
  %126 = load i32, i32* %27     
  %127 = load i32, i32* %27     
  %128 = add i32 %127, 1     ; loc+1
  store i32 %126, i32* %15     
  store i32 %128, i32* %14     
  %129 = load i32, i32* %15     
  %130 = call i32 @findfa(i32 %129)     ; ; call findfa(a)
  store i32 %130, i32* %13     ; ; m= = call i32 @findfa(i32 )
  %131 = load i32, i32* %14     
  %132 = call i32 @findfa(i32 %131)     ; ; call findfa(b)
  store i32 %132, i32* %12     ; ; n= = call i32 @findfa(i32 )
  %133 = load i32, i32* %13     
  %134 = load i32, i32* %12     
  %135= icmp ne i32 %133, %134     ; ; m!=n
  br i1 %135, label %136, label %140     ; ; judge m!=n

136:     ; mmerge ; if Body
  %137 = load i32, i32* %13     
  %138= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %137     
  %139 = load i32, i32* %12     
  store i32 %139, i32* %138     ; ; array[m]=n
  br label %140     

140:     
  %141 = load i32, i32* %31     
  %142= icmp sgt i32 %141, 1     ; b>1
  br i1 %142, label %143, label %164     

143:     
  %144 = load i32, i32* %27     
  %145 = sub i32 %144, 1     ; loc-1
  %146= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %145     
  %147 = load i32, i32* %146     
  %148= icmp ne i32 %147, -1     ; b>1 && array[loc-1]!=-1
  br i1 %148, label %149, label %164     ; judge b>1&&array[loc-1]!=-1

149:     ; if Body
  %150 = load i32, i32* %27     
  %151 = load i32, i32* %27     
  %152 = sub i32 %151, 1     ; loc-1
  store i32 %150, i32* %11     
  store i32 %152, i32* %10     
  %153 = load i32, i32* %11     
  %154 = call i32 @findfa(i32 %153)     ; ; call findfa(a)
  store i32 %154, i32* %9     ; ; m= = call i32 @findfa(i32 )
  %155 = load i32, i32* %10     
  %156 = call i32 @findfa(i32 %155)     ; ; call findfa(b)
  store i32 %156, i32* %8     ; ; n= = call i32 @findfa(i32 )
  %157 = load i32, i32* %9     
  %158 = load i32, i32* %8     
  %159= icmp ne i32 %157, %158     ; ; m!=n
  br i1 %159, label %160, label %164     ; ; judge m!=n

160:     ; mmerge ; if Body
  %161 = load i32, i32* %9     
  %162= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %161     
  %163 = load i32, i32* %8     
  store i32 %163, i32* %162     ; ; array[m]=n
  br label %164     

164:     
  %165 = load i32, i32* %32     
  %166 = load i32, i32* @n     
  %167= icmp slt i32 %165, %166     ; a<n
  br i1 %167, label %168, label %191     

168:     
  %169 = load i32, i32* %27     
  %170 = load i32, i32* @n     
  %171 = add i32 %169, %170     ; loc+n
  %172= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %171     
  %173 = load i32, i32* %172     
  %174= icmp ne i32 %173, -1     ; a<n && array[loc+n]!=-1
  br i1 %174, label %175, label %191     ; judge a<n&&array[loc+n]!=-1

175:     ; if Body
  %176 = load i32, i32* %27     
  %177 = load i32, i32* %27     
  %178 = load i32, i32* @n     
  %179 = add i32 %177, %178     ; loc+n
  store i32 %176, i32* %7     
  store i32 %179, i32* %6     
  %180 = load i32, i32* %7     
  %181 = call i32 @findfa(i32 %180)     ; ; call findfa(a)
  store i32 %181, i32* %5     ; ; m= = call i32 @findfa(i32 )
  %182 = load i32, i32* %6     
  %183 = call i32 @findfa(i32 %182)     ; ; call findfa(b)
  store i32 %183, i32* %4     ; ; n= = call i32 @findfa(i32 )
  %184 = load i32, i32* %5     
  %185 = load i32, i32* %4     
  %186= icmp ne i32 %184, %185     ; ; m!=n
  br i1 %186, label %187, label %191     ; ; judge m!=n

187:     ; mmerge ; if Body
  %188 = load i32, i32* %5     
  %189= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %188     
  %190 = load i32, i32* %4     
  store i32 %190, i32* %189     ; ; array[m]=n
  br label %191     

191:     
  %192 = load i32, i32* %32     
  %193= icmp sgt i32 %192, 1     ; a>1
  br i1 %193, label %194, label %217     

194:     
  %195 = load i32, i32* %27     
  %196 = load i32, i32* @n     
  %197 = sub i32 %195, %196     ; loc-n
  %198= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %197     
  %199 = load i32, i32* %198     
  %200= icmp ne i32 %199, -1     ; a>1 && array[loc-n]!=-1
  br i1 %200, label %201, label %217     ; judge a>1&&array[loc-n]!=-1

201:     ; if Body
  %202 = load i32, i32* %27     
  %203 = load i32, i32* %27     
  %204 = load i32, i32* @n     
  %205 = sub i32 %203, %204     ; loc-n
  store i32 %202, i32* %3     
  store i32 %205, i32* %2     
  %206 = load i32, i32* %3     
  %207 = call i32 @findfa(i32 %206)     ; ; call findfa(a)
  store i32 %207, i32* %1     ; ; m= = call i32 @findfa(i32 )
  %208 = load i32, i32* %2     
  %209 = call i32 @findfa(i32 %208)     ; ; call findfa(b)
  store i32 %209, i32* %0     ; ; n= = call i32 @findfa(i32 )
  %210 = load i32, i32* %1     
  %211 = load i32, i32* %0     
  %212= icmp ne i32 %210, %211     ; ; m!=n
  br i1 %212, label %213, label %217     ; ; judge m!=n

213:     ; mmerge ; if Body
  %214 = load i32, i32* %1     
  %215= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %214     
  %216 = load i32, i32* %0     
  store i32 %216, i32* %215     ; ; array[m]=n
  br label %217     

217:     
  %218= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 0     
  %219 = load i32, i32* %218     
  %220= icmp ne i32 %219, -1     ; array[0]!=-1
  br i1 %220, label %221, label %235     

221:     
  %222 = load i32, i32* %28     
  %223= getelementptr [110 x i32],[110 x i32]* @array , i32 0, i32 %222     
  %224 = load i32, i32* %223     
  %225= icmp ne i32 %224, -1     ; array[0]!=-1 && array[k]!=-1
  br i1 %225, label %226, label %235     

226:     
  %227 = call i32 @findfa(i32 0)     ; call findfa(0)
  %228 = load i32, i32* %28     
  %229 = call i32 @findfa(i32 %228)     ; call findfa(k)
  %230= icmp eq i32 %227, %229     ; array[0]!=-1 && array[k]!=-1 && findfa(0)==findfa(k)
  br i1 %230, label %231, label %235     ; judge array[0]!=-1&&array[k]!=-1&&findfa(0)==findfa(k)

231:     ; if Body
  store i32 1, i32* %29     ; flag=1
  %232 = load i32, i32* %30     
  %233 = add i32 %232, 1     ; i+1
  store i32 %233, i32* %26     ; tmp= = add i32 , 1
  %234 = load i32, i32* %26     
  call void @putint(i32 %234)     ; call putint(tmp)
  call void @putch(i32 10)     ; call putch(10)
  br label %235     

235:     
  %236 = load i32, i32* %30     
  %237 = add i32 %236, 1     ; i+1
  store i32 %237, i32* %30     ; i=i+1
  br label %59     

238:     ; exit while
  %239 = load i32, i32* %29     ; !flag
  %240= icmp eq i32 %239, 0     
  br i1 %240, label %241, label %35     ; judge !flag

241:     ; if Body
  call void @putint(i32 -1)     ; call putint(-1)
  call void @putch(i32 10)     ; call putch(10)
  br label %35     

242:     ; exit while
  store i32 0, i32* %ret     
  %243 = load i32, i32* %ret     
  ret i32 %243     
}

