@n = dso_local global i32 0

declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @starttime()
declare void @stoptime()

define dso_local i32 @insertsort(i32* %0){
entry:     
  %1 = alloca i32*     ; i32* a
  store i32* %0, i32** %1     
  br label %2     

2:     ; judge i<n
  %3 = load i32, i32* @n     
  %4= icmp slt i32 1, %3     ; i<n
  br i1 %4, label %5, label %9     

5:     ; while Body
  %6= icmp slt i32 3, 0     ; j<0
  br i1 %6, label %2, label %7     ; judge j<0

7:     
  %8= icmp sgt i32 3, 2     ; j>2
  br label %2     

9:     ; exit while
  ret i32 0     
}

define dso_local i32 @main(){
entry:     
  %0 = alloca [10 x i32]     ; i32 a[10]
  store i32 10, i32* @n     ; n=10
  %1= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 0     
  store i32 4, i32* %1     ; a[0]=4
  %2= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 1     
  store i32 3, i32* %2     ; a[1]=3
  %3= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 2     
  store i32 9, i32* %3     ; a[2]=9
  %4= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 3     
  store i32 2, i32* %4     ; a[3]=2
  %5= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 4     
  store i32 0, i32* %5     ; a[4]=0
  %6= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 5     
  store i32 1, i32* %6     ; a[5]=1
  %7= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 6     
  store i32 6, i32* %7     ; a[6]=6
  %8= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 7     
  store i32 5, i32* %8     ; a[7]=5
  %9= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 8     
  store i32 7, i32* %9     ; a[8]=7
  %10= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 9     
  store i32 8, i32* %10     ; a[9]=8
  %11= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 0     
  %12 = call i32 @insertsort(i32* %11)     ; call insertsort(a)
  br label %13     

13:     ; judge i<n
  %i0.0 = phi i32 [ %12, %entry ] , [ %19, %16 ]      
  %14 = load i32, i32* @n     
  %15= icmp slt i32 %i0.0, %14     ; i<n
  br i1 %15, label %16, label %20     

16:     ; while Body
  %17= getelementptr [10 x i32],[10 x i32]* %0 , i32 0, i32 %i0.0     
  %18 = load i32, i32* %17     
  call void @putint(i32 %18)     ; call putint(tmp)
  call void @putch(i32 10)     ; call putch(tmp)
  %19 = add i32 %i0.0, 1     ; i+1
  br label %13     

20:     ; exit while
  ret i32 0     
}

