@arr = dso_local global [6 x i32] [i32 1,i32 2,i32 33,i32 4,i32 5,i32 6]

declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @_sysy_stoptime()
declare void @_sysy_stoptime()

define dso_local i32 @main(){
entry:     
  br label %0     

0:     ; judge i<6
  %i.0 = phi i32 [ 0, %entry ] , [ %6, %2 ]      
  %sum.0 = phi i32 [ 0, %entry ] , [ %5, %2 ]      
  %1= icmp slt i32 %i.0, 6     ; i<6
  br i1 %1, label %2, label %7     

2:     ; while Stmt
  %3= getelementptr [6 x i32],[6 x i32]* @arr , i32 0, i32 %i.0     
  %4 = load i32, i32* %3     
  %5 = add i32 %sum.0, %4     ; sum+arr[i]
  %6 = add i32 %i.0, 1     ; i+1
  br label %0     

7:     ; exit while
  ret i32 %sum.0     
}

