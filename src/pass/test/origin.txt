declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @_sysy_starttime(i32)
declare void @_sysy_stoptime(i32)

define dso_local i32 @main(){
entry:     
  %0 = alloca i32     ; i32 n=0
  %1 = alloca i32     ; i32 m=0
  %2 = alloca i32     ; i32 k=0
  %3 = alloca i32     ; i32 j=0
  %4 = alloca i32     ; i32 i=0
  %5 = alloca i32     ; i32 sum=0
  %ret = alloca i32     
  store i32 0, i32* %5     ; sum=i32 0
  store i32 0, i32* %4     ; i=i32 0
  br label %6     

6:     ; judge i<20
  %7 = load i32, i32* %4     
  %8= icmp slt i32 %7, 20     ; i<20
  br i1 %8, label %9, label %48     

9:     ; while Body
  store i32 0, i32* %3     ; j=i32 0
  br label %10     

10:     ; judge j<1
  %11 = load i32, i32* %3     
  %12= icmp slt i32 %11, 1     ; j<1
  br i1 %12, label %13, label %45     

13:     ; while Body
  store i32 0, i32* %2     ; k=i32 0
  br label %14     

14:     ; judge k<2
  %15 = load i32, i32* %2     
  %16= icmp slt i32 %15, 2     ; k<2
  br i1 %16, label %17, label %42     

17:     ; while Body
  store i32 0, i32* %1     ; m=i32 0
  br label %18     

18:     ; judge m<3
  %19 = load i32, i32* %1     
  %20= icmp slt i32 %19, 3     ; m<3
  br i1 %20, label %21, label %33     

21:     ; while Body
  store i32 0, i32* %0     ; n=i32 0
  br label %22     

22:     ; judge n<2
  %23 = load i32, i32* %0     
  %24= icmp slt i32 %23, 2     ; n<2
  br i1 %24, label %25, label %28     

25:     ; while Body
  %26 = load i32, i32* %0     
  %27 = add i32 %26, 1     ; n+1
  store i32 %27, i32* %0     ; n=n+1
  br label %22     

28:     ; exit while
  %29 = load i32, i32* %1     
  %30 = add i32 %29, 1     ; m+1
  store i32 %30, i32* %1     ; m=m+1
  %31 = load i32, i32* %5     
  %32 = add i32 %31, 1     ; sum+1
  store i32 %32, i32* %5     ; sum=sum+1
  br label %18     

33:     ; exit while
  br label %34     

34:     ; judge 1
  br i1 1, label %35, label %39     

35:     ; while Body
  br label %36     

36:     ; judge 1
  br i1 1, label %37, label %38     

37:     ; while Body
  br label %38     

38:     ; exit while
  br label %39     

39:     ; exit while
  %40 = load i32, i32* %2     
  %41 = add i32 %40, 1     ; k+1
  store i32 %41, i32* %2     ; k=k+1
  br label %14     

42:     ; exit while
  %43 = load i32, i32* %3     
  %44 = add i32 %43, 1     ; j+1
  store i32 %44, i32* %3     ; j=j+1
  br label %10     

45:     ; exit while
  %46 = load i32, i32* %4     
  %47 = add i32 %46, 1     ; i+1
  store i32 %47, i32* %4     ; i=i+1
  br label %6     

48:     ; exit while
  %49 = load i32, i32* %5     
  store i32 %49, i32* %ret     
  br label %retBB     

retBB:     
  %50 = load i32, i32* %ret     
  ret i32 %50     
}

