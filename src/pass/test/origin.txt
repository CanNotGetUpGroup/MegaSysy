@arr = dso_local global [6 x i32] [i32 1,i32 2,i32 33,i32 4,i32 5,i32 6]

declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @_sysy_stoptime()
declare void @_sysy_stoptime()

define dso_local i32 @main(){
entry:     
  %0 = alloca i32     ; i32 sum=0
  %1 = alloca i32     ; i32 i=0
  store i32 0, i32* %1     ; i=i32 0
  store i32 0, i32* %0     ; sum=i32 0
  br label %2     

2:     ; judge i<6
  %3 = load i32, i32* %1     
  %4= icmp slt i32 %3, 6     ; i<6
  br i1 %4, label %5, label %13     

5:     ; while Stmt
  %6 = load i32, i32* %0     
  %7 = load i32, i32* %1     
  %8= getelementptr [6 x i32],[6 x i32]* @arr , i32 0, i32 %7     
  %9 = load i32, i32* %8     
  %10 = add i32 %6, %9     ; sum+arr[i]
  store i32 %10, i32* %0     ; sum=sum+arr[i]
  %11 = load i32, i32* %1     
  %12 = add i32 %11, 1     ; i+1
  store i32 %12, i32* %1     ; i=i+1
  br label %2     

13:     ; exit while
  %14 = load i32, i32* %0     
  ret i32 %14     
}

