@n = dso_local global i32 0

declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @starttime()
declare void @stoptime()

define dso_local i32 @main(i32* %0){
entry:     
  %1 = alloca i32     ; i32 j
  %2 = alloca i32     ; i32 i
  %3 = alloca i32*     ; i32* a
  ret = alloca i32     
  store i32* %0, i32** %3     
  store i32 1, i32* %2     ; i=1
  br label %4     

4:     ; judge i<n
  %5 = load i32, i32* %2     
  %6 = load i32, i32* @n     
  %7= icmp slt i32 %5, %6     ; i<n
  br i1 %7, label %8, label %21     

8:     ; while Body
  %9 = load i32, i32* %1     
  %10= icmp slt i32 %9, 0     ; j<0
  br i1 %10, label %11, label %15     ; judge j<0

11:     ; if Body
  %12 = load i32*, i32** %3     
  %13= getelementptr i32,i32* %12 , i32 2     
  %14 = load i32, i32* %13     
  store i32 %14, i32* ret     
  br label %ret     

15:     
  %16 = load i32, i32* %1     
  %17= icmp sgt i32 %16, 2     ; j>2
  br i1 %17, label %18, label %19     ; judge j>2

18:     ; if Body
  store i32 2, i32* ret     
  br label %ret     

19:     
  store i32 3, i32* %1     ; j=3
  br label %20     

20:     ; jump to head
  br label %4     

21:     ; exit while
  store i32 0, i32* ret     
  br label %ret     

ret:     
  %22 = load i32, i32* ret     
  ret i32 %22     
}

