declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @_sysy_starttime(i32)
declare void @_sysy_stoptime(i32)

define dso_local i32 @main(){
entry:     
  %0 = alloca i32     ; i32 i=getint()
  %1 = alloca i32     ; i32 ret=5
  %ret = alloca i32     
  store i32 5, i32* %1     ; ret=i32 5
  %2 = call i32 @getint()     ; call getint()
  store i32 %2, i32* %0     ; i= = call i32 @getint()
  br label %3     

3:     ; judge ret>=i
  %4 = load i32, i32* %1     
  %5 = load i32, i32* %0     
  %6= icmp sge i32 %4, %5     ; ret>=i
  br i1 %6, label %7, label %10     

7:     ; while Body
  %8 = load i32, i32* %1     
  %9 = sub i32 %8, 1     ; ret-1
  store i32 %9, i32* %1     ; ret=ret-1
  br label %3     

10:     ; exit while
  call void @putch(i32 10)     ; call putch(10)
  %11 = load i32, i32* %1     
  store i32 %11, i32* %ret     
  br label %retBB     

retBB:     
  %12 = load i32, i32* %ret     
  ret i32 %12     
}

