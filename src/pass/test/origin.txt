declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @_sysy_starttime(i32)
declare void @_sysy_stoptime(i32)

define dso_local i32 @main(){
entry:     
  %0 = alloca [4 x [2 x i32]]     ; i32 e[4][2]={{d[2][1],c[2][1]},{3,4},{5,6},{7,8}}
  %1 = alloca [4 x [2 x i32]]     ; i32 d[4][2]={1,2,{3},{5},7,8}
  %2 = alloca [4 x [2 x i32]]     ; i32 c[4][2]={{1,2},{3,4},{5,6},{7,8}}
  %3 = alloca [4 x [2 x i32]]     ; i32 b[4][2]={1,2,3,4,5,6,7,8}
  %4 = alloca [4 x [2 x i32]]     ; i32 a[4][2]={}
  %ret = alloca i32     
  %5= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %4 , i32 0, i32 0     
  %6= getelementptr [2 x i32],[2 x i32]* %5 , i32 0, i32 0     
  call void @memset(i32* %6,i32 0,i32 32)     ; a
  %7= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %3 , i32 0, i32 0     
  %8= getelementptr [2 x i32],[2 x i32]* %7 , i32 0, i32 0     
  call void @memset(i32* %8,i32 0,i32 32)     ; b
  %9= getelementptr i32,i32* %8 , i32 0     
  store i32 1, i32* %9     
  %10= getelementptr i32,i32* %8 , i32 1     
  store i32 2, i32* %10     
  %11= getelementptr i32,i32* %8 , i32 2     
  store i32 3, i32* %11     
  %12= getelementptr i32,i32* %8 , i32 3     
  store i32 4, i32* %12     
  %13= getelementptr i32,i32* %8 , i32 4     
  store i32 5, i32* %13     
  %14= getelementptr i32,i32* %8 , i32 5     
  store i32 6, i32* %14     
  %15= getelementptr i32,i32* %8 , i32 6     
  store i32 7, i32* %15     
  %16= getelementptr i32,i32* %8 , i32 7     
  store i32 8, i32* %16     
  %17= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %2 , i32 0, i32 0     
  %18= getelementptr [2 x i32],[2 x i32]* %17 , i32 0, i32 0     
  call void @memset(i32* %18,i32 0,i32 32)     ; c
  %19= getelementptr i32,i32* %18 , i32 0     
  store i32 1, i32* %19     
  %20= getelementptr i32,i32* %18 , i32 1     
  store i32 2, i32* %20     
  %21= getelementptr i32,i32* %18 , i32 2     
  store i32 3, i32* %21     
  %22= getelementptr i32,i32* %18 , i32 3     
  store i32 4, i32* %22     
  %23= getelementptr i32,i32* %18 , i32 4     
  store i32 5, i32* %23     
  %24= getelementptr i32,i32* %18 , i32 5     
  store i32 6, i32* %24     
  %25= getelementptr i32,i32* %18 , i32 6     
  store i32 7, i32* %25     
  %26= getelementptr i32,i32* %18 , i32 7     
  store i32 8, i32* %26     
  %27= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %1 , i32 0, i32 0     
  %28= getelementptr [2 x i32],[2 x i32]* %27 , i32 0, i32 0     
  call void @memset(i32* %28,i32 0,i32 32)     ; d
  %29= getelementptr i32,i32* %28 , i32 0     
  store i32 1, i32* %29     
  %30= getelementptr i32,i32* %28 , i32 1     
  store i32 2, i32* %30     
  %31= getelementptr i32,i32* %28 , i32 2     
  store i32 3, i32* %31     
  %32= getelementptr i32,i32* %28 , i32 4     
  store i32 5, i32* %32     
  %33= getelementptr i32,i32* %28 , i32 6     
  store i32 7, i32* %33     
  %34= getelementptr i32,i32* %28 , i32 7     
  store i32 8, i32* %34     
  %35= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %0 , i32 0, i32 0     
  %36= getelementptr [2 x i32],[2 x i32]* %35 , i32 0, i32 0     
  call void @memset(i32* %36,i32 0,i32 32)     ; e
  %37= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %1 , i32 0, i32 0     
  %38= getelementptr [2 x i32],[2 x i32]* %37 , i32 0, i32 0     
  %39= getelementptr i32,i32* %38 , i32 5     
  %40 = load i32, i32* %39     
  %41= getelementptr i32,i32* %36 , i32 0     
  store i32 %40, i32* %41     
  %42= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %2 , i32 0, i32 0     
  %43= getelementptr [2 x i32],[2 x i32]* %42 , i32 0, i32 0     
  %44= getelementptr i32,i32* %43 , i32 5     
  %45 = load i32, i32* %44     
  %46= getelementptr i32,i32* %36 , i32 1     
  store i32 %45, i32* %46     
  %47= getelementptr i32,i32* %36 , i32 2     
  store i32 3, i32* %47     
  %48= getelementptr i32,i32* %36 , i32 3     
  store i32 4, i32* %48     
  %49= getelementptr i32,i32* %36 , i32 4     
  store i32 5, i32* %49     
  %50= getelementptr i32,i32* %36 , i32 5     
  store i32 6, i32* %50     
  %51= getelementptr i32,i32* %36 , i32 6     
  store i32 7, i32* %51     
  %52= getelementptr i32,i32* %36 , i32 7     
  store i32 8, i32* %52     
  %53= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %0 , i32 0, i32 0     
  %54= getelementptr [2 x i32],[2 x i32]* %53 , i32 0, i32 0     
  %55= getelementptr i32,i32* %54 , i32 7     
  %56 = load i32, i32* %55     
  %57= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %0 , i32 0, i32 0     
  %58= getelementptr [2 x i32],[2 x i32]* %57 , i32 0, i32 0     
  %59 = load i32, i32* %58     
  %60 = add i32 %56, %59     ; e[3][1]+e[0][0]
  %61= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %0 , i32 0, i32 0     
  %62= getelementptr [2 x i32],[2 x i32]* %61 , i32 0, i32 0     
  %63= getelementptr i32,i32* %62 , i32 1     
  %64 = load i32, i32* %63     
  %65 = add i32 %60, %64     ; e[3][1]+e[0][0]+e[0][1]
  %66= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %4 , i32 0, i32 0     
  %67= getelementptr [2 x i32],[2 x i32]* %66 , i32 0, i32 0     
  %68= getelementptr i32,i32* %67 , i32 4     
  %69 = load i32, i32* %68     
  %70 = add i32 %65, %69     ; e[3][1]+e[0][0]+e[0][1]+a[2][0]
  store i32 %70, i32* %ret     
  br label %retBB     

retBB:     
  %71 = load i32, i32* %ret     
  ret i32 %71     
}

