declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @starttime()
declare void @stoptime()

define dso_local i32 @main(){
  %1 = alloca i32     ; get sum
  %2 = alloca i32     ; get i
  %3 = alloca i32     ; get n
  %4 = call i32 @getint()     ; call getint()
  store i32 %4, i32* %3     ; n=x1 = call i32 @getint()
  store i32 0, i32* %2     ; i=i32 0
  store i32 0, i32* %1     ; sum=i32 0
  br label %5     

5:     ; judge i<n
  %6 = load i32, i32* %2     
  %7 = load i32, i32* %3     
  %8= icmp slt i32 %6, %7     ; i<n
  br i1 %8, label %9, label %23     

9:     ; while Stmt
  %10 = load i32, i32* %2     
  %11 = srem i32 %10, 2     ; i%2
  %12= icmp eq i32 %11, 0     ; i%2==0
  br i1 %12, label %13, label %16     ; judge i%2==0

13:     ; if Stmt
  %14 = load i32, i32* %2     
  %15 = add i32 %14, 1     ; i+1
  store i32 %15, i32* %2     ; i=i+1
  br label %5     

16:     
  %17 = load i32, i32* %2     
  %18 = add i32 %17, 1     ; i+1
  store i32 %18, i32* %2     ; i=i+1
  %19 = load i32, i32* %1     
  %20 = load i32, i32* %2     
  %21 = add i32 %19, %20     ; sum+i
  store i32 %21, i32* %1     ; sum=sum+i
  %22 = load i32, i32* %1     
  call void @putint(i32 %22)     ; call putint(sum)
  call void @putch(i32 10)     ; call putch(10)
  br label %5     

23:     ; exit while
  ret i32 0     
}

