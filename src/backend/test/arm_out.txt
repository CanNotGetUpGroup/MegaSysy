	.data
	.text
	.align	2
	.arch armv7ve
	.syntax unified
	.arm
	.fpu vfpv4
	.global	main
	.type	main, %function
main:
.main1:
	Push { LR }
	Push { r11 }
	ADD	r11, SP, #4
	SUB	SP, SP, #48
	@ %0 = alloca float
	SUB	SP, SP, #4
	SUB	r4, r11, #8
	STR r4, [ r11 , #-12 ]
	@ store float 0x40c541e660000000, float* %0
	movw	r4, 3891
	movt	r4, 17962

	STR r4, [ r11 , #-16 ]
	LDR r5, [ r11 , #-16 ]
	LDR r7, [ r11 , #-12 ]
	STR r5, [ r7 ]
	@ %1 = load float, float* %0
	LDR r7, [ r11 , #-12 ]
	LDR r4, [ r7 ]
	STR r4, [ r11 , #-20 ]
	@ %2 = fdiv float %1, 0x4043d999a0000000
	movw	r4, 52429
	movt	r4, 16926

	STR r4, [ r11 , #-24 ]
	LDR r6, [ r11 , #-20 ]
	vmov.f32	s15, r6
	vSTR.32 s15, [ r11 , #-28 ]
	LDR r6, [ r11 , #-24 ]
	vmov.f32	s15, r6
	vSTR.32 s15, [ r11 , #-32 ]
	vLDR.32 s16, [ r11 , #-28 ]
	vLDR.32 s17, [ r11 , #-32 ]
	vDIV.f32	s15, s16, s17
	vSTR.32 s15, [ r11 , #-36 ]
	@ %3 = fadd float %2, 0x402c666660000000
	movw	r4, 13107
	movt	r4, 16739

	STR r4, [ r11 , #-40 ]
	LDR r6, [ r11 , #-40 ]
	vmov.f32	s15, r6
	vSTR.32 s15, [ r11 , #-44 ]
	vLDR.32 s16, [ r11 , #-36 ]
	vLDR.32 s17, [ r11 , #-44 ]
	vADD.f32	s15, s16, s17
	vSTR.32 s15, [ r11 , #-48 ]
	@ %4 = fptosi float %3 to i32
	vLDR.32 s17, [ r11 , #-48 ]
	vcvt.s32.f32	s15, s17
	vSTR.32 s15, [ r11 , #-52 ]
	vLDR.32 s17, [ r11 , #-52 ]
	vmov	r4, s17
	STR r4, [ r11 , #-56 ]
	@ ret i32 %4
	LDR r6, [ r11 , #-56 ]
	mov	r0, r6
	SUB	SP, r11, #4
	Pop { r11 }
	BX	LR

	.size	main, .-main

