declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @starttime()
declare void @stoptime()

define dso_local i32 @main(){
  %1 = alloca i32     ; get a
  %2 = alloca [4 x [2 x i32]]     ; i32 b[4][2]={}
  %3= getelementptr [4 x [2 x i32]],[4 x [2 x i32]]* %2 , i32 0, i32 0     
  %4= getelementptr [2 x i32],[2 x i32]* %3 , i32 0, i32 0     
  call void @memset(i32* %4,i32 0,i32 32)     ; b
  store i32 10, i32* %1     ; a=10
  %5 = load i32, i32* %1     
  %6= icmp eq i32 %5, 0     ; !a
  %7= icmp eq i1 %6, 0     ; !!a
  %8= icmp eq i1 %7, 0     ; !!!a
  %9 = zext i1 %8 to i32     
  %10 = sub i32 0, %9     ; +-!!!a
  %11= icmp ne i32 %10, 0     
  br i1 %11, label %12, label %13     ; judge +-!!!a

12:     ; if Stmt
  store i32 -1, i32* %1     ; a=---1
  br label %14     

13:     ; else Stmt
  store i32 0, i32* %1     ; a=0
  br label %14     

14:     
  %15 = load i32, i32* %1     
  call void @putint(i32 %15)     ; call putint(a)
  ret i32 0     
}

