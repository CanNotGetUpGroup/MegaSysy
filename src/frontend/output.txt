@ints = dso_local global [10000 x i32] zeroinitializer
@intt = dso_local global i32 0
@chas = dso_local global [10000 x i32] zeroinitializer
@chat = dso_local global i32 0
@i = dso_local global i32 0
@ii = dso_local global i32 1
@c = dso_local global i32 0
@get = dso_local global [10000 x i32] zeroinitializer
@get2 = dso_local global [10000 x i32] zeroinitializer

declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @starttime()
declare void @stoptime()

define dso_local i32 @isdigit(i32 %0){
  %2 = alloca i32     ; get x
  store i32 %0, i32* %2     
  %3 = load i32, i32* %2     
  %4= icmp sge i32 %3, 48     ; x>=48
  br i1 %4, label %5, label %9     

5:     
  %6 = load i32, i32* %2     
  %7= icmp sle i32 %6, 57     ; x>=48 && x<=57
  br i1 %7, label %8, label %9     ; judge x>=48&&x<=57

8:     ; if Stmt
  ret i32 1     

9:     
  ret i32 0     
}

define dso_local i32 @power(i32 %0,i32 %1){
  %3 = alloca i32     ; get result
  %4 = alloca i32     ; get a
  %5 = alloca i32     ; get b
  store i32 %0, i32* %5     
  store i32 %1, i32* %4     
  store i32 1, i32* %3     ; result=i32 1
  br label %6     

6:     ; judge a!=0
  %7 = load i32, i32* %4     
  %8= icmp ne i32 %7, 0     ; a!=0
  br i1 %8, label %9, label %15     

9:     ; while Stmt
  %10 = load i32, i32* %3     
  %11 = load i32, i32* %5     
  %12 = mul i32 %10, %11     ; result*b
  store i32 %12, i32* %3     ; result=result*b
  %13 = load i32, i32* %4     
  %14 = sub i32 %13, 1     ; a-1
  store i32 %14, i32* %4     ; a=a-1
  br label %6     

15:     ; exit while
  %16 = load i32, i32* %3     
  ret i32 %16     
}

define dso_local i32 @getstr(i32* %0){
  %2 = alloca i32     ; get length
  %3 = alloca i32     ; get x
  %4 = alloca i32*     ; i32* get
  store i32* %0, i32** %4     
  %5 = call i32 @getch()     ; call getch()
  store i32 %5, i32* %3     ; x=x4 = call i32 @getch()
  store i32 0, i32* %2     ; length=i32 0
  br label %6     

6:     ; judge x!=13&&x!=10
  %7 = load i32, i32* %3     
  %8= icmp ne i32 %7, 13     ; x!=13
  br i1 %8, label %9, label %20     

9:     
  %10 = load i32, i32* %3     
  %11= icmp ne i32 %10, 10     ; x!=13 && x!=10
  br i1 %11, label %12, label %20     

12:     ; while Stmt
  %13 = load i32*, i32** %4     
  %14 = load i32, i32* %2     
  %15= getelementptr i32,i32* %13 , i32 %14     ; get get[length]
  %16 = load i32, i32* %3     
  store i32 %16, i32* %15     ; get[length]=x
  %17 = load i32, i32* %2     
  %18 = add i32 %17, 1     ; length+1
  store i32 %18, i32* %2     ; length=length+1
  %19 = call i32 @getch()     ; call getch()
  store i32 %19, i32* %3     ; x=getch()
  br label %6     

20:     ; exit while
  %21 = load i32, i32* %2     
  ret i32 %21     
}

define dso_local void @intpush(i32 %0){
  %2 = alloca i32     ; get x
  store i32 %0, i32* %2     
  %3 = load i32, i32* @intt     
  %4 = add i32 %3, 1     ; intt+1
  store i32 %4, i32* @intt     ; intt=intt+1
  %5 = load i32, i32* @intt     
  %6= getelementptr [10000 x i32],[10000 x i32]* @ints , i32 0, i32 %5     ; get ints[intt]
  %7 = load i32, i32* %2     
  store i32 %7, i32* %6     ; ints[intt]=x
  ret void     
}

define dso_local void @chapush(i32 %0){
  %2 = alloca i32     ; get x
  store i32 %0, i32* %2     
  %3 = load i32, i32* @chat     
  %4 = add i32 %3, 1     ; chat+1
  store i32 %4, i32* @chat     ; chat=chat+1
  %5 = load i32, i32* @chat     
  %6= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %5     ; get chas[chat]
  %7 = load i32, i32* %2     
  store i32 %7, i32* %6     ; chas[chat]=x
  ret void     
}

define dso_local i32 @intpop(){
  %1 = load i32, i32* @intt     
  %2 = sub i32 %1, 1     ; intt-1
  store i32 %2, i32* @intt     ; intt=intt-1
  %3 = load i32, i32* @intt     
  %4 = add i32 %3, 1     ; intt+1
  %5= getelementptr [10000 x i32],[10000 x i32]* @ints , i32 0, i32 %4     ; get ints[intt+1]
  %6 = load i32, i32* %5     
  ret i32 %6     
}

define dso_local i32 @chapop(){
  %1 = load i32, i32* @chat     
  %2 = sub i32 %1, 1     ; chat-1
  store i32 %2, i32* @chat     ; chat=chat-1
  %3 = load i32, i32* @chat     
  %4 = add i32 %3, 1     ; chat+1
  %5= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %4     ; get chas[chat+1]
  %6 = load i32, i32* %5     
  ret i32 %6     
}

define dso_local void @intadd(i32 %0){
  %2 = alloca i32     ; get x
  store i32 %0, i32* %2     
  %3 = load i32, i32* @intt     
  %4= getelementptr [10000 x i32],[10000 x i32]* @ints , i32 0, i32 %3     ; get ints[intt]
  %5 = load i32, i32* @intt     
  %6= getelementptr [10000 x i32],[10000 x i32]* @ints , i32 0, i32 %5     ; get ints[intt]
  %7 = load i32, i32* %6     
  %8 = mul i32 %7, 10     ; ints[intt]*10
  store i32 %8, i32* %4     ; ints[intt]=ints[intt]*10
  %9 = load i32, i32* @intt     
  %10= getelementptr [10000 x i32],[10000 x i32]* @ints , i32 0, i32 %9     ; get ints[intt]
  %11 = load i32, i32* @intt     
  %12= getelementptr [10000 x i32],[10000 x i32]* @ints , i32 0, i32 %11     ; get ints[intt]
  %13 = load i32, i32* %12     
  %14 = load i32, i32* %2     
  %15 = add i32 %13, %14     ; ints[intt]+x
  store i32 %15, i32* %10     ; ints[intt]=ints[intt]+x
  ret void     
}

define dso_local i32 @find(){
  %1 = call i32 @chapop()     ; call chapop()
  store i32 %1, i32* @c     ; c=chapop()
  %2 = load i32, i32* @ii     
  %3= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %2     ; get get2[ii]
  store i32 32, i32* %3     ; get2[ii]=32
  %4 = load i32, i32* @ii     
  %5 = add i32 %4, 1     ; ii+1
  %6= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %5     ; get get2[ii+1]
  %7 = load i32, i32* @c     
  store i32 %7, i32* %6     ; get2[ii+1]=c
  %8 = load i32, i32* @ii     
  %9 = add i32 %8, 2     ; ii+2
  store i32 %9, i32* @ii     ; ii=ii+2
  %10 = load i32, i32* @chat     
  %11= icmp eq i32 %10, 0     ; chat==0
  br i1 %11, label %12, label %13     ; judge chat==0

12:     ; if Stmt
  ret i32 0     

13:     
  ret i32 1     
}

define dso_local i32 @main(){
  %1 = alloca i32     ; get c
  %2 = alloca i32     ; get b
  %3 = alloca i32     ; get a
  %4 = alloca i32     ; get c
  %5 = alloca i32     ; get lengets
  store i32 0, i32* @intt     ; intt=0
  store i32 0, i32* @chat     ; chat=0
  %6= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 0     
  %7 = call i32 @getstr(i32* %6)     ; call getstr(get)
  store i32 %7, i32* %5     ; lengets=x8 = call i32 @getstr(i32* x7)
  br label %8     

8:     ; judge i<lengets
  %9 = load i32, i32* @i     
  %10 = load i32, i32* %5     
  %11= icmp slt i32 %9, %10     ; i<lengets
  br i1 %11, label %12, label %247     

12:     ; while Stmt
  %13 = load i32, i32* @i     
  %14= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %13     ; get get[i]
  %15 = load i32, i32* %14     
  %16 = call i32 @isdigit(i32 %15)     ; call isdigit(get[i])
  %17= icmp eq i32 %16, 1     ; isdigit(get[i])==1
  br i1 %17, label %18, label %26     ; judge isdigit(get[i])==1

18:     ; if Stmt
  %19 = load i32, i32* @ii     
  %20= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %19     ; get get2[ii]
  %21 = load i32, i32* @i     
  %22= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %21     ; get get[i]
  %23 = load i32, i32* %22     
  store i32 %23, i32* %20     ; get2[ii]=get[i]
  %24 = load i32, i32* @ii     
  %25 = add i32 %24, 1     ; ii+1
  store i32 %25, i32* @ii     ; ii=ii+1
  br label %244     

26:     ; else Stmt
  %27 = load i32, i32* @i     
  %28= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %27     ; get get[i]
  %29 = load i32, i32* %28     
  %30= icmp eq i32 %29, 40     ; get[i]==40
  br i1 %30, label %31, label %32     ; judge get[i]==40

31:     ; if Stmt
  call void @chapush(i32 40)     ; call chapush(40)
  br label %32     

32:     
  %33 = load i32, i32* @i     
  %34= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %33     ; get get[i]
  %35 = load i32, i32* %34     
  %36= icmp eq i32 %35, 94     ; get[i]==94
  br i1 %36, label %37, label %38     ; judge get[i]==94

37:     ; if Stmt
  call void @chapush(i32 94)     ; call chapush(94)
  br label %38     

38:     
  %39 = load i32, i32* @i     
  %40= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %39     ; get get[i]
  %41 = load i32, i32* %40     
  %42= icmp eq i32 %41, 41     ; get[i]==41
  br i1 %42, label %43, label %59     ; judge get[i]==41

43:     ; if Stmt
  %44 = call i32 @chapop()     ; call chapop()
  store i32 %44, i32* @c     ; c=chapop()
  br label %45     

45:     ; judge c!=40
  %46 = load i32, i32* @c     
  %47= icmp ne i32 %46, 40     ; c!=40
  br i1 %47, label %48, label %58     

48:     ; while Stmt
  %49 = load i32, i32* @ii     
  %50= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %49     ; get get2[ii]
  store i32 32, i32* %50     ; get2[ii]=32
  %51 = load i32, i32* @ii     
  %52 = add i32 %51, 1     ; ii+1
  %53= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %52     ; get get2[ii+1]
  %54 = load i32, i32* @c     
  store i32 %54, i32* %53     ; get2[ii+1]=c
  %55 = load i32, i32* @ii     
  %56 = add i32 %55, 2     ; ii+2
  store i32 %56, i32* @ii     ; ii=ii+2
  %57 = call i32 @chapop()     ; call chapop()
  store i32 %57, i32* @c     ; c=chapop()
  br label %45     

58:     ; exit while
  br label %59     

59:     
  %60 = load i32, i32* @i     
  %61= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %60     ; get get[i]
  %62 = load i32, i32* %61     
  %63= icmp eq i32 %62, 43     ; get[i]==43
  br i1 %63, label %64, label %101     ; judge get[i]==43

64:     ; if Stmt
  br label %65     

65:     ; judge chas[chat]==43||chas[chat]==45||chas[chat]==42||chas[chat]==47||chas[chat]==37||chas[chat]==94
  %66 = load i32, i32* @chat     
  %67= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %66     ; get chas[chat]
  %68 = load i32, i32* %67     
  %69= icmp eq i32 %68, 43     ; chas[chat]==43
  br i1 %69, label %95, label %70     

70:     
  %71 = load i32, i32* @chat     
  %72= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %71     ; get chas[chat]
  %73 = load i32, i32* %72     
  %74= icmp eq i32 %73, 45     ; chas[chat]==43 || chas[chat]==45
  br i1 %74, label %95, label %75     

75:     
  %76 = load i32, i32* @chat     
  %77= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %76     ; get chas[chat]
  %78 = load i32, i32* %77     
  %79= icmp eq i32 %78, 42     ; chas[chat]==43 || chas[chat]==45 || chas[chat]==42
  br i1 %79, label %95, label %80     

80:     
  %81 = load i32, i32* @chat     
  %82= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %81     ; get chas[chat]
  %83 = load i32, i32* %82     
  %84= icmp eq i32 %83, 47     ; chas[chat]==43 || chas[chat]==45 || chas[chat]==42 || chas[chat]==47
  br i1 %84, label %95, label %85     

85:     
  %86 = load i32, i32* @chat     
  %87= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %86     ; get chas[chat]
  %88 = load i32, i32* %87     
  %89= icmp eq i32 %88, 37     ; chas[chat]==43 || chas[chat]==45 || chas[chat]==42 || chas[chat]==47 || chas[chat]==37
  br i1 %89, label %95, label %90     

90:     
  %91 = load i32, i32* @chat     
  %92= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %91     ; get chas[chat]
  %93 = load i32, i32* %92     
  %94= icmp eq i32 %93, 94     ; chas[chat]==43 || chas[chat]==45 || chas[chat]==42 || chas[chat]==47 || chas[chat]==37 || chas[chat]==94
  br i1 %94, label %95, label %100     

95:     ; while Stmt
  %96 = call i32 @find()     ; call find()
  %97= icmp eq i32 %96, 0     ; find()==0
  br i1 %97, label %98, label %99     ; judge find()==0

98:     ; if Stmt
  br label %100     

99:     
  br label %65     

100:     ; exit while
  call void @chapush(i32 43)     ; call chapush(43)
  br label %101     

101:     
  %102 = load i32, i32* @i     
  %103= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %102     ; get get[i]
  %104 = load i32, i32* %103     
  %105= icmp eq i32 %104, 45     ; get[i]==45
  br i1 %105, label %106, label %143     ; judge get[i]==45

106:     ; if Stmt
  br label %107     

107:     ; judge chas[chat]==43||chas[chat]==45||chas[chat]==42||chas[chat]==47||chas[chat]==37||chas[chat]==94
  %108 = load i32, i32* @chat     
  %109= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %108     ; get chas[chat]
  %110 = load i32, i32* %109     
  %111= icmp eq i32 %110, 43     ; chas[chat]==43
  br i1 %111, label %137, label %112     

112:     
  %113 = load i32, i32* @chat     
  %114= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %113     ; get chas[chat]
  %115 = load i32, i32* %114     
  %116= icmp eq i32 %115, 45     ; chas[chat]==43 || chas[chat]==45
  br i1 %116, label %137, label %117     

117:     
  %118 = load i32, i32* @chat     
  %119= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %118     ; get chas[chat]
  %120 = load i32, i32* %119     
  %121= icmp eq i32 %120, 42     ; chas[chat]==43 || chas[chat]==45 || chas[chat]==42
  br i1 %121, label %137, label %122     

122:     
  %123 = load i32, i32* @chat     
  %124= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %123     ; get chas[chat]
  %125 = load i32, i32* %124     
  %126= icmp eq i32 %125, 47     ; chas[chat]==43 || chas[chat]==45 || chas[chat]==42 || chas[chat]==47
  br i1 %126, label %137, label %127     

127:     
  %128 = load i32, i32* @chat     
  %129= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %128     ; get chas[chat]
  %130 = load i32, i32* %129     
  %131= icmp eq i32 %130, 37     ; chas[chat]==43 || chas[chat]==45 || chas[chat]==42 || chas[chat]==47 || chas[chat]==37
  br i1 %131, label %137, label %132     

132:     
  %133 = load i32, i32* @chat     
  %134= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %133     ; get chas[chat]
  %135 = load i32, i32* %134     
  %136= icmp eq i32 %135, 94     ; chas[chat]==43 || chas[chat]==45 || chas[chat]==42 || chas[chat]==47 || chas[chat]==37 || chas[chat]==94
  br i1 %136, label %137, label %142     

137:     ; while Stmt
  %138 = call i32 @find()     ; call find()
  %139= icmp eq i32 %138, 0     ; find()==0
  br i1 %139, label %140, label %141     ; judge find()==0

140:     ; if Stmt
  br label %142     

141:     
  br label %107     

142:     ; exit while
  call void @chapush(i32 45)     ; call chapush(45)
  br label %143     

143:     
  %144 = load i32, i32* @i     
  %145= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %144     ; get get[i]
  %146 = load i32, i32* %145     
  %147= icmp eq i32 %146, 42     ; get[i]==42
  br i1 %147, label %148, label %175     ; judge get[i]==42

148:     ; if Stmt
  br label %149     

149:     ; judge chas[chat]==42||chas[chat]==47||chas[chat]==37||chas[chat]==94
  %150 = load i32, i32* @chat     
  %151= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %150     ; get chas[chat]
  %152 = load i32, i32* %151     
  %153= icmp eq i32 %152, 42     ; chas[chat]==42
  br i1 %153, label %169, label %154     

154:     
  %155 = load i32, i32* @chat     
  %156= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %155     ; get chas[chat]
  %157 = load i32, i32* %156     
  %158= icmp eq i32 %157, 47     ; chas[chat]==42 || chas[chat]==47
  br i1 %158, label %169, label %159     

159:     
  %160 = load i32, i32* @chat     
  %161= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %160     ; get chas[chat]
  %162 = load i32, i32* %161     
  %163= icmp eq i32 %162, 37     ; chas[chat]==42 || chas[chat]==47 || chas[chat]==37
  br i1 %163, label %169, label %164     

164:     
  %165 = load i32, i32* @chat     
  %166= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %165     ; get chas[chat]
  %167 = load i32, i32* %166     
  %168= icmp eq i32 %167, 94     ; chas[chat]==42 || chas[chat]==47 || chas[chat]==37 || chas[chat]==94
  br i1 %168, label %169, label %174     

169:     ; while Stmt
  %170 = call i32 @find()     ; call find()
  %171= icmp eq i32 %170, 0     ; find()==0
  br i1 %171, label %172, label %173     ; judge find()==0

172:     ; if Stmt
  br label %174     

173:     
  br label %149     

174:     ; exit while
  call void @chapush(i32 42)     ; call chapush(42)
  br label %175     

175:     
  %176 = load i32, i32* @i     
  %177= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %176     ; get get[i]
  %178 = load i32, i32* %177     
  %179= icmp eq i32 %178, 47     ; get[i]==47
  br i1 %179, label %180, label %207     ; judge get[i]==47

180:     ; if Stmt
  br label %181     

181:     ; judge chas[chat]==42||chas[chat]==47||chas[chat]==37||chas[chat]==94
  %182 = load i32, i32* @chat     
  %183= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %182     ; get chas[chat]
  %184 = load i32, i32* %183     
  %185= icmp eq i32 %184, 42     ; chas[chat]==42
  br i1 %185, label %201, label %186     

186:     
  %187 = load i32, i32* @chat     
  %188= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %187     ; get chas[chat]
  %189 = load i32, i32* %188     
  %190= icmp eq i32 %189, 47     ; chas[chat]==42 || chas[chat]==47
  br i1 %190, label %201, label %191     

191:     
  %192 = load i32, i32* @chat     
  %193= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %192     ; get chas[chat]
  %194 = load i32, i32* %193     
  %195= icmp eq i32 %194, 37     ; chas[chat]==42 || chas[chat]==47 || chas[chat]==37
  br i1 %195, label %201, label %196     

196:     
  %197 = load i32, i32* @chat     
  %198= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %197     ; get chas[chat]
  %199 = load i32, i32* %198     
  %200= icmp eq i32 %199, 94     ; chas[chat]==42 || chas[chat]==47 || chas[chat]==37 || chas[chat]==94
  br i1 %200, label %201, label %206     

201:     ; while Stmt
  %202 = call i32 @find()     ; call find()
  %203= icmp eq i32 %202, 0     ; find()==0
  br i1 %203, label %204, label %205     ; judge find()==0

204:     ; if Stmt
  br label %206     

205:     
  br label %181     

206:     ; exit while
  call void @chapush(i32 47)     ; call chapush(47)
  br label %207     

207:     
  %208 = load i32, i32* @i     
  %209= getelementptr [10000 x i32],[10000 x i32]* @get , i32 0, i32 %208     ; get get[i]
  %210 = load i32, i32* %209     
  %211= icmp eq i32 %210, 37     ; get[i]==37
  br i1 %211, label %212, label %239     ; judge get[i]==37

212:     ; if Stmt
  br label %213     

213:     ; judge chas[chat]==42||chas[chat]==47||chas[chat]==37||chas[chat]==94
  %214 = load i32, i32* @chat     
  %215= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %214     ; get chas[chat]
  %216 = load i32, i32* %215     
  %217= icmp eq i32 %216, 42     ; chas[chat]==42
  br i1 %217, label %233, label %218     

218:     
  %219 = load i32, i32* @chat     
  %220= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %219     ; get chas[chat]
  %221 = load i32, i32* %220     
  %222= icmp eq i32 %221, 47     ; chas[chat]==42 || chas[chat]==47
  br i1 %222, label %233, label %223     

223:     
  %224 = load i32, i32* @chat     
  %225= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %224     ; get chas[chat]
  %226 = load i32, i32* %225     
  %227= icmp eq i32 %226, 37     ; chas[chat]==42 || chas[chat]==47 || chas[chat]==37
  br i1 %227, label %233, label %228     

228:     
  %229 = load i32, i32* @chat     
  %230= getelementptr [10000 x i32],[10000 x i32]* @chas , i32 0, i32 %229     ; get chas[chat]
  %231 = load i32, i32* %230     
  %232= icmp eq i32 %231, 94     ; chas[chat]==42 || chas[chat]==47 || chas[chat]==37 || chas[chat]==94
  br i1 %232, label %233, label %238     

233:     ; while Stmt
  %234 = call i32 @find()     ; call find()
  %235= icmp eq i32 %234, 0     ; find()==0
  br i1 %235, label %236, label %237     ; judge find()==0

236:     ; if Stmt
  br label %238     

237:     
  br label %213     

238:     ; exit while
  call void @chapush(i32 37)     ; call chapush(37)
  br label %239     

239:     
  %240 = load i32, i32* @ii     
  %241= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %240     ; get get2[ii]
  store i32 32, i32* %241     ; get2[ii]=32
  %242 = load i32, i32* @ii     
  %243 = add i32 %242, 1     ; ii+1
  store i32 %243, i32* @ii     ; ii=ii+1
  br label %244     

244:     
  %245 = load i32, i32* @i     
  %246 = add i32 %245, 1     ; i+1
  store i32 %246, i32* @i     ; i=i+1
  br label %8     

247:     ; exit while
  br label %248     

248:     ; judge chat>0
  %249 = load i32, i32* @chat     
  %250= icmp sgt i32 %249, 0     ; chat>0
  br i1 %250, label %251, label %261     

251:     ; while Stmt
  %252 = call i32 @chapop()     ; call chapop()
  store i32 %252, i32* %4     ; c=x440 = call i32 @chapop()
  %253 = load i32, i32* @ii     
  %254= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %253     ; get get2[ii]
  store i32 32, i32* %254     ; get2[ii]=32
  %255 = load i32, i32* @ii     
  %256 = add i32 %255, 1     ; ii+1
  %257= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %256     ; get get2[ii+1]
  %258 = load i32, i32* %4     
  store i32 %258, i32* %257     ; get2[ii+1]=c
  %259 = load i32, i32* @ii     
  %260 = add i32 %259, 2     ; ii+2
  store i32 %260, i32* @ii     ; ii=ii+2
  br label %248     

261:     ; exit while
  %262 = load i32, i32* @ii     
  %263= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %262     ; get get2[ii]
  store i32 64, i32* %263     ; get2[ii]=64
  store i32 1, i32* @i     ; i=1
  br label %264     

264:     ; judge get2[i]!=64
  %265 = load i32, i32* @i     
  %266= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %265     ; get get2[i]
  %267 = load i32, i32* %266     
  %268= icmp ne i32 %267, 64     ; get2[i]!=64
  br i1 %268, label %269, label %392     

269:     ; while Stmt
  %270 = load i32, i32* @i     
  %271= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %270     ; get get2[i]
  %272 = load i32, i32* %271     
  %273= icmp eq i32 %272, 43     ; get2[i]==43
  br i1 %273, label %299, label %274     

274:     
  %275 = load i32, i32* @i     
  %276= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %275     ; get get2[i]
  %277 = load i32, i32* %276     
  %278= icmp eq i32 %277, 45     ; get2[i]==43 || get2[i]==45
  br i1 %278, label %299, label %279     

279:     
  %280 = load i32, i32* @i     
  %281= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %280     ; get get2[i]
  %282 = load i32, i32* %281     
  %283= icmp eq i32 %282, 42     ; get2[i]==43 || get2[i]==45 || get2[i]==42
  br i1 %283, label %299, label %284     

284:     
  %285 = load i32, i32* @i     
  %286= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %285     ; get get2[i]
  %287 = load i32, i32* %286     
  %288= icmp eq i32 %287, 47     ; get2[i]==43 || get2[i]==45 || get2[i]==42 || get2[i]==47
  br i1 %288, label %299, label %289     

289:     
  %290 = load i32, i32* @i     
  %291= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %290     ; get get2[i]
  %292 = load i32, i32* %291     
  %293= icmp eq i32 %292, 37     ; get2[i]==43 || get2[i]==45 || get2[i]==42 || get2[i]==47 || get2[i]==37
  br i1 %293, label %299, label %294     

294:     
  %295 = load i32, i32* @i     
  %296= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %295     ; get get2[i]
  %297 = load i32, i32* %296     
  %298= icmp eq i32 %297, 94     ; get2[i]==43 || get2[i]==45 || get2[i]==42 || get2[i]==47 || get2[i]==37 || get2[i]==94
  br i1 %298, label %299, label %357     ; judge get2[i]==43||get2[i]==45||get2[i]==42||get2[i]==47||get2[i]==37||get2[i]==94

299:     ; if Stmt
  %300 = call i32 @intpop()     ; call intpop()
  store i32 %300, i32* %3     ; a=x526 = call i32 @intpop()
  %301 = call i32 @intpop()     ; call intpop()
  store i32 %301, i32* %2     ; b=x529 = call i32 @intpop()
  %302 = load i32, i32* @i     
  %303= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %302     ; get get2[i]
  %304 = load i32, i32* %303     
  %305= icmp eq i32 %304, 43     ; get2[i]==43
  br i1 %305, label %306, label %310     ; judge get2[i]==43

306:     ; if Stmt
  %307 = load i32, i32* %3     
  %308 = load i32, i32* %2     
  %309 = add i32 %307, %308     ; a+b
  store i32 %309, i32* %1     ; c=a+b
  br label %310     

310:     
  %311 = load i32, i32* @i     
  %312= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %311     ; get get2[i]
  %313 = load i32, i32* %312     
  %314= icmp eq i32 %313, 45     ; get2[i]==45
  br i1 %314, label %315, label %319     ; judge get2[i]==45

315:     ; if Stmt
  %316 = load i32, i32* %2     
  %317 = load i32, i32* %3     
  %318 = sub i32 %316, %317     ; b-a
  store i32 %318, i32* %1     ; c=b-a
  br label %319     

319:     
  %320 = load i32, i32* @i     
  %321= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %320     ; get get2[i]
  %322 = load i32, i32* %321     
  %323= icmp eq i32 %322, 42     ; get2[i]==42
  br i1 %323, label %324, label %328     ; judge get2[i]==42

324:     ; if Stmt
  %325 = load i32, i32* %3     
  %326 = load i32, i32* %2     
  %327 = mul i32 %325, %326     ; a*b
  store i32 %327, i32* %1     ; c=a*b
  br label %328     

328:     
  %329 = load i32, i32* @i     
  %330= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %329     ; get get2[i]
  %331 = load i32, i32* %330     
  %332= icmp eq i32 %331, 47     ; get2[i]==47
  br i1 %332, label %333, label %337     ; judge get2[i]==47

333:     ; if Stmt
  %334 = load i32, i32* %2     
  %335 = load i32, i32* %3     
  %336 = sdiv i32 %334, %335     ; b/a
  store i32 %336, i32* %1     ; c=b/a
  br label %337     

337:     
  %338 = load i32, i32* @i     
  %339= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %338     ; get get2[i]
  %340 = load i32, i32* %339     
  %341= icmp eq i32 %340, 37     ; get2[i]==37
  br i1 %341, label %342, label %346     ; judge get2[i]==37

342:     ; if Stmt
  %343 = load i32, i32* %2     
  %344 = load i32, i32* %3     
  %345 = srem i32 %343, %344     ; b%a
  store i32 %345, i32* %1     ; c=b%a
  br label %346     

346:     
  %347 = load i32, i32* @i     
  %348= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %347     ; get get2[i]
  %349 = load i32, i32* %348     
  %350= icmp eq i32 %349, 94     ; get2[i]==94
  br i1 %350, label %351, label %355     ; judge get2[i]==94

351:     ; if Stmt
  %352 = load i32, i32* %2     
  %353 = load i32, i32* %3     
  %354 = call i32 @power(i32 %352,i32 %353)     ; call power(b,a)
  store i32 %354, i32* %1     ; c=power(b,a)
  br label %355     

355:     
  %356 = load i32, i32* %1     
  call void @intpush(i32 %356)     ; call intpush(c)
  br label %389     

357:     ; else Stmt
  %358 = load i32, i32* @i     
  %359= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %358     ; get get2[i]
  %360 = load i32, i32* %359     
  %361= icmp ne i32 %360, 32     ; get2[i]!=32
  br i1 %361, label %362, label %388     ; judge get2[i]!=32

362:     ; if Stmt
  %363 = load i32, i32* @i     
  %364= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %363     ; get get2[i]
  %365 = load i32, i32* %364     
  %366 = sub i32 %365, 48     ; get2[i]-48
  call void @intpush(i32 %366)     ; call intpush(get2[i]-48)
  store i32 1, i32* @ii     ; ii=1
  br label %367     

367:     ; judge get2[i+ii]!=32
  %368 = load i32, i32* @i     
  %369 = load i32, i32* @ii     
  %370 = add i32 %368, %369     ; i+ii
  %371= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %370     ; get get2[i+ii]
  %372 = load i32, i32* %371     
  %373= icmp ne i32 %372, 32     ; get2[i+ii]!=32
  br i1 %373, label %374, label %383     

374:     ; while Stmt
  %375 = load i32, i32* @i     
  %376 = load i32, i32* @ii     
  %377 = add i32 %375, %376     ; i+ii
  %378= getelementptr [10000 x i32],[10000 x i32]* @get2 , i32 0, i32 %377     ; get get2[i+ii]
  %379 = load i32, i32* %378     
  %380 = sub i32 %379, 48     ; get2[i+ii]-48
  call void @intadd(i32 %380)     ; call intadd(get2[i+ii]-48)
  %381 = load i32, i32* @ii     
  %382 = add i32 %381, 1     ; ii+1
  store i32 %382, i32* @ii     ; ii=ii+1
  br label %367     

383:     ; exit while
  %384 = load i32, i32* @i     
  %385 = load i32, i32* @ii     
  %386 = add i32 %384, %385     ; i+ii
  %387 = sub i32 %386, 1     ; i+ii-1
  store i32 %387, i32* @i     ; i=i+ii-1
  br label %388     

388:     
  br label %389     

389:     
  %390 = load i32, i32* @i     
  %391 = add i32 %390, 1     ; i+1
  store i32 %391, i32* @i     ; i=i+1
  br label %264     

392:     ; exit while
  %393= getelementptr [10000 x i32],[10000 x i32]* @ints , i32 0, i32 1     ; get ints[1]
  %394 = load i32, i32* %393     
  call void @putint(i32 %394)     ; call putint(ints[1])
  ret i32 0     
}

