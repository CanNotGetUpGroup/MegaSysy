declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @starttime()
declare void @stoptime()

define dso_local i32 @main(){
  %1 = alloca i32     ; get a
  store i32 10, i32* %1     ; a=10
  %2 = load i32, i32* %1     
  %3= icmp eq i32 %2, 0     ; !a
  %4= icmp eq i1 %3, 0     ; !!a
  %5= icmp eq i1 %4, 0     ; !!!a
  %6 = zext i1 %5 to i32     
  %7 = sub i32 0, %6     ; +-!!!a
  %8= icmp ne i32 %7, 0     
  br i1 %8, label %9, label %10     ; judge +-!!!a

9:     ; if Stmt
  store i32 -1, i32* %1     ; a=---1
  br label %11     

10:     ; else Stmt
  store i32 0, i32* %1     ; a=0
  br label %11     

11:     
  %12 = load i32, i32* %1     
  call void @putint(i32 %12)     ; call putint(a)
  ret i32 0     
}

