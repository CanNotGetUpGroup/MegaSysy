declare i32 @getint()
declare float @getfloat()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @putfloat(float)
declare void @putarray(i32,i32*)
declare void @putfarray(i32,float*)
declare void @memset(i32*,i32,i32)
declare void @starttime()
declare void @stoptime()

define dso_local i32 @ifElseIf(){
  %1 = alloca i32     ; get b
  %2 = alloca i32     ; get a
  store i32 5, i32* %2     ; a=5
  store i32 10, i32* %1     ; b=10
  %3 = load i32, i32* %2     
  %4= icmp eq i32 %3, 6     ; a==6
  br i1 %4, label %8, label %5     

5:     
  %6 = load i32, i32* %1     
  %7= icmp eq i32 %6, 11     ; a==6 || b==0xb
  br i1 %7, label %8, label %10     ; judge a==6||b==0xb

8:     ; if Stmt
  %9 = load i32, i32* %2     
  ret i32 %9     

10:     ; else Stmt
  %11 = load i32, i32* %1     
  %12= icmp eq i32 %11, 10     ; b==10
  br i1 %12, label %13, label %17     

13:     
  %14 = load i32, i32* %2     
  %15= icmp eq i32 %14, 1     ; b==10 && a==1
  br i1 %15, label %16, label %17     ; judge b==10&&a==1

16:     ; if Stmt
  store i32 25, i32* %2     ; a=25
  br label %30     

17:     ; else Stmt
  %18 = load i32, i32* %1     
  %19= icmp eq i32 %18, 10     ; b==10
  br i1 %19, label %20, label %26     

20:     
  %21 = load i32, i32* %2     
  %22= icmp eq i32 %21, -5     ; b==10 && a==-5
  br i1 %22, label %23, label %26     ; judge b==10&&a==-5

23:     ; if Stmt
  %24 = load i32, i32* %2     
  %25 = add i32 %24, 15     ; a+15
  store i32 %25, i32* %2     ; a=a+15
  br label %29     

26:     ; else Stmt
  %27 = load i32, i32* %2     ; +a
  %28 = sub i32 0, %27     ; -+a
  store i32 %28, i32* %2     ; a=-+a
  br label %29     

29:     
  br label %30     

30:     
  br label %31     

31:     
  %32 = load i32, i32* %2     
  ret i32 %32     
}

define dso_local i32 @main(){
  %1 = call i32 @ifElseIf()     ; call ifElseIf()
  call void @putint(i32 %1)     ; call putint(ifElseIf())
  ret i32 0     
}

